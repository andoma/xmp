VERSION		= 3.9.0
COMPAT_VERSION	= 3.9.0
VER_MAJOR	= 3

CC		= @CC@
CFLAGS		= -c -Wall @CFLAGS@ @DEFS@ #-D_DEBUG
LD		= @CC@
LDFLAGS		= @LDFLAGS@
LIBS		= @LIBS@
RANLIB		= @RANLIB@
INSTALL		= @INSTALL@
DESTDIR		=
prefix		= @prefix@
exec_prefix	= @prefix@
datarootdir	= @datarootdir@
BINDIR		= @bindir@
LIBDIR		= @libdir@
INCLUDEDIR	= @includedir@
SYSCONFDIR	= @sysconfdir@/xmp
SHELL		= /bin/sh

DIST		= libxmp-$(VERSION)
DFILES		= README INSTALL install-sh configure configure.ac Makefile.in \
		  libxmp.pc.in libxmp.map
DDIRS		= docs include src loaders prowiz win32 test
V		= 0
LIB		= libxmp.a
SOLIB		= libxmp.so
SHLIB		= $(SOLIB).$(VERSION)
SONAME		= $(SOLIB).$(VER_MAJOR)
DLL		= libxmp.dll
DYLIB		= libxmp.$(VERSION).dylib
MAPFILE		= libxmp.map
VERCODE		= 0x00030900

all: @STATIC@ @SHARED@

include docs/Makefile
include include/Makefile
include src/Makefile
include src/loaders/Makefile
include src/loaders/prowizard/Makefile
include src/win32/Makefile
include test/Makefile

LOBJS = $(OBJS:.o=.lo)

CFLAGS += -Iinclude -Isrc -DVERSION=$(VERCODE)

.SUFFIXES: .c .o .lo .a .so .dll .in

.c.o:
	@CMD='$(CC) $(CFLAGS) -o $*.o $<'; \
	if [ "$(V)" -gt 0 ]; then echo $$CMD; else echo CC $*.o ; fi; \
	eval $$CMD

.c.lo:
	@CMD='$(CC) $(CFLAGS) -fPIC -D_REENTRANT -o $*.lo $<'; \
	if [ "$(V)" -gt 0 ]; then echo $$CMD; else echo CC $*.lo ; fi; \
	eval $$CMD

static: lib/$(LIB)

shared: lib/$(SHLIB)

dll: lib/$(DLL)

dylib: lib/$(DYLIB)

lib/$(LIB): $(OBJS)
	@mkdir -p lib
	@CMD='$(AR) r $@ $(OBJS)'; \
	if [ "$(V)" -gt 0 ]; then echo $$CMD; else echo AR $@ ; fi; \
	eval $$CMD
	$(RANLIB) $@

lib/$(SHLIB): $(LOBJS)
	@mkdir -p lib
	@CMD='$(CC) -shared -Wl,-soname,$(SONAME) -Wl,--version-script,$(MAPFILE) -o $@ $(LOBJS) $(LIBS)'; \
	if [ "$(V)" -gt 0 ]; then echo $$CMD; else echo LD $@ ; fi; \
	eval $$CMD
	ln -sf $(SHLIB) lib/$(SONAME)
	ln -sf $(SONAME) lib/$(SOLIB)

lib/$(DLL): $(LOBJS)
	@mkdir -p lib
	@CMD='$(CC) -shared -Wl,--out-implib,libxmp_dll.a -o $@ $(LOBJS) $(LIBS)'; \
	if [ "$(V)" -gt 0 ]; then echo $$CMD; else echo LD $@ ; fi; \
	eval $$CMD

lib/$(DYLIB): $(LOBJS)
	@mkdir -p lib
	@CMD='$(CC) -dynamiclib -Wl,-headerpad_max_install_names,-undefined,dynamic_lookup,-compatibility_version,$(COMPAT_VERSION),-current_version,$(VERSION),-install_name,$(prefix)/lib/$(DYLIB) -o $@ $(LOBJS) $(LIBS)'; \
	if [ "$(V)" -gt 0 ]; then echo $$CMD; else echo LD $@ ; fi; \
	eval $$CMD
	ln -sf $(DYLIB) lib/libxmp.$(VER_MAJOR).dylib
	ln -sf libxmp.$(VER_MAJOR).dylib lib/libxmp.dylib

clean:
	@rm -f $(OBJS) $(LOBJS) lib/lib*

install: all
	@mkdir -p $(DEST)$(LIBDIR) $(DEST)$(INCLUDEDIR)
	@if [ -f lib/$(LIB) ]; then \
		echo "Installing $(LIB)..."; \
		$(INSTALL) lib/$(LIB) $(DEST)$(LIBDIR); \
	fi
	@if [ -f lib/$(DYLIB) ]; then \
		echo "Installing $(DYLIB)..."; \
		$(INSTALL) lib/$(DYLIB) $(DEST)$(LIBDIR); \
		ln -sf $(DYLIB) $(DEST)$(LIBDIR)/libxmp.$(VER_MAJOR).dylib; \
		ln -sf libxmp.$(VER_MAJOR).dylib $(DEST)$(LIBDIR)/libxmp.dylib;\
	fi
	@if [ -f lib/$(SHLIB) ]; then \
		echo "Installing $(SHLIB)..."; \
		$(INSTALL) lib/$(SHLIB) $(DEST)$(LIBDIR); \
		ln -sf $(SHLIB) $(DEST)$(LIBDIR)/$(SONAME); \
		ln -sf $(SONAME) $(DEST)$(LIBDIR)/$(SOLIB); \
	fi
	@echo "Installing xmp.h..."
	@$(INSTALL) include/xmp.h $(DEST)$(INCLUDEDIR)
	@echo "Installing libxmp.pc..."
	@mkdir -p $(DEST)$(LIBDIR)/pkgconfig
	$(INSTALL) libxmp.pc $(DEST)$(LIBDIR)/pkgconfig/

depend:
	@echo Building dependencies...
	@echo > $@
	@for i in $(OBJS) $(M_OBJS); do \
	    c="$${i%.o}.c"; l="$${i%.o}.lo"; \
	    $(CC) $(CFLAGS) -MM $$c | \
		sed "s!^.*\.o:!$$i $$l:!" >> $@ ; \
	done
	    
dist: version-prepare dist-prepare dist-subdirs

dist-prepare:
	rm -Rf $(DIST) $(DIST).tar.gz
	mkdir -p $(DIST)
	cp -RPp $(DFILES) $(DIST)/

dist-subdirs: $(addprefix dist-,$(DDIRS))
	chmod -R u+w $(DIST)/*
	tar cvf - $(DIST) | gzip -9c > $(DIST).tar.gz
	rm -Rf $(DIST)
	ls -l $(DIST).tar.gz

$(OBJS): Makefile

$(LOBJS): Makefile

version-prepare:
	version=`sed -ne 's/^VERSION\s*=\s*//p' Makefile.in`; \
	vercode=`echo $$version | awk '{ split($$1,a,"."); printf "0x00%02x%02x%02x",a[1],a[2],a[3] }'`; \
	sed -i -e "/^VERCODE\s*=/s/=.*/= $$vercode/" Makefile.in
	./config.status

sinclude depend

